{"version":3,"sources":["components/Header.js","graphql/mutations.js","components/AddSong.js","graphql/subscriptions.js","components/SongList.js","components/QueuedSongList.js","graphql/queries.js","components/SongPlayer.js","reducer.js","App.js","theme.js","graphql/client.js","index.js"],"names":["useStyles","makeStyles","theme","title","marginLeft","spacing","Header","classes","AppBar","color","position","Toolbar","HeadsetTwoTone","Typography","className","variant","component","ADD_OR_REMOVE_FROM_QUEUE","gql","ADD_SONG","container","display","alignItems","urlInput","margin","addSongButton","dialog","textAlign","thumbnail","width","DEFAULT_SONG","duration","artist","AddSong","useMutation","addSong","error","React","useState","url","setUrl","playable","setPlayable","setDialog","song","setSong","handleChangeSong","event","target","name","value","prevSong","handleCloseDialog","a","player","nestedPlayer","getVideoData","songData","getYoutubeInfo","getCurrentSound","getSoundcloudInfo","variables","length","console","getDuration","video_id","author","Promise","resolve","Number","user","username","artwork_url","replace","handleError","field","graphQLErrors","extensions","path","includes","useEffect","isPlayable","SoundcloudPlayer","canPlay","YoutubePlayer","Dialog","open","onClose","DialogTitle","DialogContent","src","alt","TextField","onChange","label","fullWidth","helperText","DialogActions","Button","onClick","placeholder","type","InputProps","startAdornment","InputAdornment","Link","disabled","endIcon","AddBoxOutlined","hidden","onReady","GET_SONGS","songInfoContainer","songInfo","justifyContent","objectFit","height","Song","id","onCompleted","data","localStorage","setItem","JSON","stringify","addOrRemoveFromQueue","useContext","SongContext","state","dispatch","currentSongPlaying","setCurrentSongPlaying","isSongPlaying","isPlaying","Card","CardMedia","image","CardContent","gutterBottom","CardActions","IconButton","payload","size","Pause","PlayArrow","input","__typename","Save","SongList","useSubscription","loading","style","flexDirection","marginTop","CircularProgress","songs","map","avatar","text","textOverflow","overflow","gridAutoFlow","gridTemplateColumns","gridGap","whiteSpace","QueuedSong","Avatar","Delete","QueuedSongList","queue","useMediaQuery","breakpoints","up","GET_QUEUED_SONGS","details","padding","content","flex","controls","paddingLeft","paddingRight","playIcon","SongPlayer","seconds","useQuery","reactPlayerRef","useRef","played","setPlayed","playedSeconds","setPlayedSeconds","seeking","setSeeking","positionInQueue","setPositionInQueue","songIndex","findIndex","nextSong","SkipPrevious","SkipNext","Date","toISOString","substr","Slider","onMouseDown","onMouseUp","current","seekTo","newValue","min","max","step","ref","onProgress","playing","songReducer","action","createContext","App","initialSongState","useReducer","greaterThanSm","greaterThanMd","Provider","Hidden","only","Grid","paddingTop","item","xs","md","right","top","left","bottom","createMuiTheme","palette","primary","teal","secondary","purple","client","ApolloClient","link","WebSocketLink","uri","options","reconnect","cache","InMemoryCache","typeDefs","resolvers","Mutation","_","queryResult","readQuery","query","newQueue","some","filter","writeQuery","Boolean","getItem","parse","writeData","ReactDOM","render","ApolloProvider","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.5d8c3505.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { AppBar, Toolbar, Typography, makeStyles } from \"@material-ui/core\";\r\nimport { HeadsetTwoTone } from \"@material-ui/icons\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  title: {\r\n    marginLeft: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nfunction Header() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <AppBar color=\"primary\" position=\"fixed\">\r\n      <Toolbar>\r\n        <HeadsetTwoTone />\r\n        <Typography className={classes.title} variant=\"h6\" component=\"h1\">\r\n          Apollo Music Share\r\n        </Typography>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import { gql } from 'apollo-boost';\r\n\r\nexport const ADD_OR_REMOVE_FROM_QUEUE = gql`\r\n\tmutation addOrRemoveFromQueue($input: SongInput!) {\r\n\t\taddOrRemoveFromQueue(input: $input) @client\r\n\t}\r\n`;\r\n\r\nexport const ADD_SONG = gql`\r\n\tmutation addSong($title: String!, $artist: String!, $thumbnail: String!, $duration: Float!, $url: String!) {\r\n\t\tinsert_songs(\r\n\t\t\tobjects: { title: $title, thumbnail: $thumbnail, duration: $duration, url: $url, artist: $artist }\r\n\t\t) {\r\n\t\t\taffected_rows\r\n\t\t}\r\n\t}\r\n`;\r\n","import React from \"react\";\r\nimport {\r\n  TextField,\r\n  InputAdornment,\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  makeStyles\r\n} from \"@material-ui/core\";\r\nimport { Link, AddBoxOutlined } from \"@material-ui/icons\";\r\nimport ReactPlayer from \"react-player\";\r\nimport SoundcloudPlayer from \"react-player/lib/players/SoundCloud\";\r\nimport YoutubePlayer from \"react-player/lib/players/YouTube\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { ADD_SONG } from \"../graphql/mutations\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    display: \"flex\",\r\n    alignItems: \"center\"\r\n  },\r\n  urlInput: {\r\n    margin: theme.spacing(1)\r\n  },\r\n  addSongButton: {\r\n    margin: theme.spacing(1)\r\n  },\r\n  dialog: {\r\n    textAlign: \"center\"\r\n  },\r\n  thumbnail: {\r\n    width: \"90%\"\r\n  }\r\n}));\r\n\r\nconst DEFAULT_SONG = {\r\n  duration: 0,\r\n  title: \"\",\r\n  artist: \"\",\r\n  thumbnail: \"\"\r\n};\r\n\r\nfunction AddSong() {\r\n  const classes = useStyles();\r\n  const [addSong, { error }] = useMutation(ADD_SONG);\r\n  const [url, setUrl] = React.useState(\"\");\r\n  const [playable, setPlayable] = React.useState(false);\r\n  const [dialog, setDialog] = React.useState(false);\r\n  const [song, setSong] = React.useState(DEFAULT_SONG);\r\n\r\n  React.useEffect(() => {\r\n    const isPlayable =\r\n      SoundcloudPlayer.canPlay(url) || YoutubePlayer.canPlay(url);\r\n    setPlayable(isPlayable);\r\n  }, [url]);\r\n\r\n  function handleChangeSong(event) {\r\n    const { name, value } = event.target;\r\n    setSong(prevSong => ({\r\n      ...prevSong,\r\n      [name]: value\r\n    }));\r\n  }\r\n\r\n  function handleCloseDialog() {\r\n    setDialog(false);\r\n  }\r\n\r\n  async function handleEditSong({ player }) {\r\n    const nestedPlayer = player.player.player;\r\n    let songData;\r\n    if (nestedPlayer.getVideoData) {\r\n      songData = getYoutubeInfo(nestedPlayer);\r\n    } else if (nestedPlayer.getCurrentSound) {\r\n      songData = await getSoundcloudInfo(nestedPlayer);\r\n    }\r\n    setSong({ ...songData, url });\r\n  }\r\n\r\n  async function handleAddSong() {\r\n    try {\r\n      const { url, thumbnail, duration, title, artist } = song;\r\n      await addSong({\r\n        variables: {\r\n          url: url.length > 0 ? url : null,\r\n          thumbnail: thumbnail.length > 0 ? thumbnail : null,\r\n          duration: duration > 0 ? duration : null,\r\n          title: title.length > 0 ? title : null,\r\n          artist: artist.length > 0 ? artist : null\r\n        }\r\n      });\r\n      handleCloseDialog();\r\n      setSong(DEFAULT_SONG);\r\n      setUrl(\"\");\r\n    } catch (error) {\r\n      console.error(\"Error adding song\", error);\r\n    }\r\n  }\r\n\r\n  function getYoutubeInfo(player) {\r\n    const duration = player.getDuration();\r\n    const { title, video_id, author } = player.getVideoData();\r\n    const thumbnail = `http://img.youtube.com/vi/${video_id}/0.jpg`;\r\n    return {\r\n      duration,\r\n      title,\r\n      artist: author,\r\n      thumbnail\r\n    };\r\n  }\r\n\r\n  function getSoundcloudInfo(player) {\r\n    return new Promise(resolve => {\r\n      player.getCurrentSound(songData => {\r\n        if (songData) {\r\n          resolve({\r\n            duration: Number(songData.duration / 1000),\r\n            title: songData.title,\r\n            artist: songData.user.username,\r\n            thumbnail: songData.artwork_url.replace(\"-large\", \"-t500x500\")\r\n          });\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  function handleError(field) {\r\n    return error?.graphQLErrors[0]?.extensions?.path.includes(field);\r\n  }\r\n\r\n  const { thumbnail, title, artist } = song;\r\n  return (\r\n    <div className={classes.container}>\r\n      <Dialog\r\n        className={classes.dialog}\r\n        open={dialog}\r\n        onClose={handleCloseDialog}\r\n      >\r\n        <DialogTitle>Edit Song</DialogTitle>\r\n        <DialogContent>\r\n          <img\r\n            src={thumbnail}\r\n            alt=\"Song thumbnail\"\r\n            className={classes.thumbnail}\r\n          />\r\n          <TextField\r\n            value={title}\r\n            onChange={handleChangeSong}\r\n            margin=\"dense\"\r\n            name=\"title\"\r\n            label=\"Title\"\r\n            fullWidth\r\n            error={handleError(\"title\")}\r\n            helperText={handleError(\"title\") && \"Fill out field\"}\r\n          />\r\n          <TextField\r\n            value={artist}\r\n            onChange={handleChangeSong}\r\n            margin=\"dense\"\r\n            name=\"artist\"\r\n            label=\"Artist\"\r\n            fullWidth\r\n            error={handleError(\"artist\")}\r\n            helperText={handleError(\"artist\") && \"Fill out field\"}\r\n          />\r\n          <TextField\r\n            value={thumbnail}\r\n            onChange={handleChangeSong}\r\n            margin=\"dense\"\r\n            name=\"thumbnail\"\r\n            label=\"Thumbnail\"\r\n            fullWidth\r\n            error={handleError(\"thumbnail\")}\r\n            helperText={handleError(\"thumbnail\") && \"Fill out field\"}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseDialog} color=\"secondary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleAddSong} variant=\"outlined\" color=\"primary\">\r\n            Add Song\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <TextField\r\n        className={classes.urlInput}\r\n        onChange={event => setUrl(event.target.value)}\r\n        value={url}\r\n        placeholder=\"Add Youtube or Soundcloud Url\"\r\n        fullWidth\r\n        margin=\"normal\"\r\n        type=\"url\"\r\n        InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position=\"start\">\r\n              <Link />\r\n            </InputAdornment>\r\n          )\r\n        }}\r\n      />\r\n      <Button\r\n        disabled={!playable}\r\n        className={classes.addSongButton}\r\n        onClick={() => setDialog(true)}\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        endIcon={<AddBoxOutlined />}\r\n      >\r\n        Add\r\n      </Button>\r\n      <ReactPlayer url={url} hidden onReady={handleEditSong} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddSong;\r\n","import { gql } from 'apollo-boost';\r\n\r\nexport const GET_SONGS = gql`\r\n\tsubscription getSongs {\r\n\t\tsongs(order_by: { created_at: desc }) {\r\n\t\t\tartist\r\n\t\t\tduration\r\n\t\t\tid\r\n\t\t\tthumbnail\r\n\t\t\ttitle\r\n\t\t\turl\r\n\t\t}\r\n\t}\r\n`;\r\n","import React from 'react';\r\nimport {\r\n\tCircularProgress,\r\n\tCard,\r\n\tCardMedia,\r\n\tCardContent,\r\n\tTypography,\r\n\tCardActions,\r\n\tIconButton,\r\n\tmakeStyles\r\n} from '@material-ui/core';\r\nimport { PlayArrow, Save, Pause } from '@material-ui/icons';\r\nimport { useMutation, useSubscription } from '@apollo/react-hooks';\r\nimport { GET_SONGS } from '../graphql/subscriptions';\r\nimport { SongContext } from '../App';\r\nimport { ADD_OR_REMOVE_FROM_QUEUE } from '../graphql/mutations';\r\n\r\nfunction SongList() {\r\n\tconst { data, loading, error } = useSubscription(GET_SONGS);\r\n\r\n\t// const song = {\r\n\t//   title: \"LÜNE\",\r\n\t//   artist: \"MÖÖN\",\r\n\t//   thumbnail: \"http://img.youtube.com/vi/--ZtUFsIgMk/0.jpg\"\r\n\t// };\r\n\r\n\tif (loading) {\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\tflexDirection: 'column',\r\n\t\t\t\t\talignItems: 'center',\r\n\t\t\t\t\tmarginTop: 50\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<CircularProgress />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\tif (error) return <div>Error fetching songs</div>;\r\n\r\n\treturn <div>{data.songs.map((song) => <Song key={song.id} song={song} />)}</div>;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tcontainer: {\r\n\t\tmargin: theme.spacing(3)\r\n\t},\r\n\tsongInfoContainer: {\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center'\r\n\t},\r\n\tsongInfo: {\r\n\t\twidth: '100%',\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'space-between'\r\n\t},\r\n\tthumbnail: {\r\n\t\tobjectFit: 'cover',\r\n\t\twidth: 140,\r\n\t\theight: 140\r\n\t}\r\n}));\r\n\r\nfunction Song({ song }) {\r\n\tconst { id } = song;\r\n\tconst classes = useStyles();\r\n\tconst [ addOrRemoveFromQueue ] = useMutation(ADD_OR_REMOVE_FROM_QUEUE, {\r\n\t\tonCompleted: (data) => {\r\n\t\t\tlocalStorage.setItem('queue', JSON.stringify(data.addOrRemoveFromQueue));\r\n\t\t}\r\n\t});\r\n\tconst { state, dispatch } = React.useContext(SongContext);\r\n\tconst [ currentSongPlaying, setCurrentSongPlaying ] = React.useState(false);\r\n\tconst { title, artist, thumbnail } = song;\r\n\r\n\tReact.useEffect(\r\n\t\t() => {\r\n\t\t\tconst isSongPlaying = state.isPlaying && id === state.song.id;\r\n\t\t\tsetCurrentSongPlaying(isSongPlaying);\r\n\t\t},\r\n\t\t[ id, state.song.id, state.isPlaying ]\r\n\t);\r\n\r\n\tfunction handleTogglePlay() {\r\n\t\tdispatch({ type: 'SET_SONG', payload: { song } });\r\n\t\tdispatch(state.isPlaying ? { type: 'PAUSE_SONG' } : { type: 'PLAY_SONG' });\r\n\t}\r\n\r\n\tfunction handleAddOrRemoveFromQueue() {\r\n\t\taddOrRemoveFromQueue({\r\n\t\t\tvariables: { input: { ...song, __typename: 'Song' } }\r\n\t\t});\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Card className={classes.container}>\r\n\t\t\t<div className={classes.songInfoContainer}>\r\n\t\t\t\t<CardMedia image={thumbnail} className={classes.thumbnail} />\r\n\t\t\t\t<div className={classes.songInfo}>\r\n\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t<Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n\t\t\t\t\t\t\t{title}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography variant=\"body1\" component=\"p\" color=\"textSecondary\">\r\n\t\t\t\t\t\t\t{artist}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</CardContent>\r\n\t\t\t\t\t<CardActions>\r\n\t\t\t\t\t\t<IconButton onClick={handleTogglePlay} size=\"small\" color=\"primary\">\r\n\t\t\t\t\t\t\t{currentSongPlaying ? <Pause /> : <PlayArrow />}\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t<IconButton onClick={handleAddOrRemoveFromQueue} size=\"small\" color=\"secondary\">\r\n\t\t\t\t\t\t\t<Save />\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t</CardActions>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Card>\r\n\t);\r\n}\r\n\r\nexport default SongList;\r\n","import React from 'react';\r\nimport { Typography, Avatar, IconButton, makeStyles, useMediaQuery } from '@material-ui/core';\r\nimport { Delete } from '@material-ui/icons';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport { ADD_OR_REMOVE_FROM_QUEUE } from '../graphql/mutations';\r\n\r\nfunction QueuedSongList({ queue }) {\r\n\tconst greaterThanMd = useMediaQuery((theme) => theme.breakpoints.up('md'));\r\n\r\n\t// const song = {\r\n\t//   title: \"LÜNE\",\r\n\t//   artist: \"MÖÖN\",\r\n\t//   thumbnail: \"http://img.youtube.com/vi/--ZtUFsIgMk/0.jpg\"\r\n\t// };\r\n\r\n\treturn (\r\n\t\tgreaterThanMd && (\r\n\t\t\t<div style={{ margin: '10px 0' }}>\r\n\t\t\t\t<Typography color=\"textSecondary\" variant=\"button\">\r\n\t\t\t\t\tQUEUE ({queue.length})\r\n\t\t\t\t</Typography>\r\n\t\t\t\t{queue.map((song) => <QueuedSong key={song.id} song={song} />)}\r\n\t\t\t</div>\r\n\t\t)\r\n\t);\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n\tavatar: {\r\n\t\twidth: 44,\r\n\t\theight: 44\r\n\t},\r\n\ttext: {\r\n\t\ttextOverflow: 'ellipsis',\r\n\t\toverflow: 'hidden'\r\n\t},\r\n\tcontainer: {\r\n\t\tdisplay: 'grid',\r\n\t\tgridAutoFlow: 'column',\r\n\t\tgridTemplateColumns: '50px auto 50px',\r\n\t\tgridGap: 12,\r\n\t\talignItems: 'center',\r\n\t\tmarginTop: 10\r\n\t},\r\n\tsongInfoContainer: {\r\n\t\toverflow: 'hidden',\r\n\t\twhiteSpace: 'nowrap'\r\n\t}\r\n});\r\n\r\nfunction QueuedSong({ song }) {\r\n\tconst classes = useStyles();\r\n\tconst [ addOrRemoveFromQueue ] = useMutation(ADD_OR_REMOVE_FROM_QUEUE, {\r\n\t\tonCompleted: (data) => {\r\n\t\t\tlocalStorage.setItem('queue', JSON.stringify(data.addOrRemoveFromQueue));\r\n\t\t}\r\n\t});\r\n\tconst { thumbnail, artist, title } = song;\r\n\r\n\tfunction handleAddOrRemoveFromQueue() {\r\n\t\taddOrRemoveFromQueue({\r\n\t\t\tvariables: { input: { ...song, __typename: 'Song' } }\r\n\t\t});\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={classes.container}>\r\n\t\t\t<Avatar src={thumbnail} alt=\"Song thumbnail\" className={classes.avatar} />\r\n\t\t\t<div className={classes.songInfoContainer}>\r\n\t\t\t\t<Typography variant=\"subtitle2\" className={classes.text}>\r\n\t\t\t\t\t{title}\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography color=\"textSecondary\" variant=\"body2\" className={classes.text}>\r\n\t\t\t\t\t{artist}\r\n\t\t\t\t</Typography>\r\n\t\t\t</div>\r\n\t\t\t<IconButton onClick={handleAddOrRemoveFromQueue}>\r\n\t\t\t\t<Delete color=\"error\" />\r\n\t\t\t</IconButton>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default QueuedSongList;\r\n","import { gql } from 'apollo-boost';\r\n\r\nexport const GET_QUEUED_SONGS = gql`\r\n\tquery getQueuedSongs {\r\n\t\tqueue @client {\r\n\t\t\tid\r\n\t\t\tduration\r\n\t\t\ttitle\r\n\t\t\tartist\r\n\t\t\tthumbnail\r\n\t\t\turl\r\n\t\t}\r\n\t}\r\n`;\r\n","import React from \"react\";\r\nimport QueuedSongList from \"./QueuedSongList\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  IconButton,\r\n  Slider,\r\n  CardMedia,\r\n  makeStyles\r\n} from \"@material-ui/core\";\r\nimport { SkipPrevious, PlayArrow, SkipNext, Pause } from \"@material-ui/icons\";\r\nimport { SongContext } from \"../App\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { GET_QUEUED_SONGS } from \"../graphql/queries\";\r\nimport ReactPlayer from \"react-player\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\"\r\n  },\r\n  details: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    padding: \"0px 15px\"\r\n  },\r\n  content: {\r\n    flex: \"1 0 auto\"\r\n  },\r\n  thumbnail: {\r\n    width: 150\r\n  },\r\n  controls: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    paddingLeft: theme.spacing(1),\r\n    paddingRight: theme.spacing(1)\r\n  },\r\n  playIcon: {\r\n    height: 38,\r\n    width: 38\r\n  }\r\n}));\r\n\r\nfunction SongPlayer() {\r\n  const { data } = useQuery(GET_QUEUED_SONGS);\r\n  const reactPlayerRef = React.useRef();\r\n  const { state, dispatch } = React.useContext(SongContext);\r\n  const [played, setPlayed] = React.useState(0);\r\n  const [playedSeconds, setPlayedSeconds] = React.useState(0);\r\n  const [seeking, setSeeking] = React.useState(false);\r\n  const [positionInQueue, setPositionInQueue] = React.useState(0);\r\n  const classes = useStyles();\r\n\r\n  React.useEffect(() => {\r\n    const songIndex = data.queue.findIndex(song => song.id === state.song.id);\r\n    setPositionInQueue(songIndex);\r\n  }, [data.queue, state.song.id]);\r\n\r\n  React.useEffect(() => {\r\n    const nextSong = data.queue[positionInQueue + 1];\r\n    if (played >= 0.99 && nextSong) {\r\n      setPlayed(0);\r\n      dispatch({ type: \"SET_SONG\", payload: { song: nextSong } });\r\n    }\r\n  }, [data.queue, played, dispatch, positionInQueue]);\r\n\r\n  function handleTogglePlay() {\r\n    dispatch(state.isPlaying ? { type: \"PAUSE_SONG\" } : { type: \"PLAY_SONG\" });\r\n  }\r\n\r\n  function handleProgressChange(event, newValue) {\r\n    setPlayed(newValue);\r\n  }\r\n\r\n  function handleSeekMouseDown() {\r\n    setSeeking(true);\r\n  }\r\n\r\n  function handleSeekMouseUp() {\r\n    setSeeking(false);\r\n    reactPlayerRef.current.seekTo(played);\r\n  }\r\n\r\n  function formatDuration(seconds) {\r\n    return new Date(seconds * 1000).toISOString().substr(11, 8);\r\n  }\r\n\r\n  function handlePlayNextSong() {\r\n    const nextSong = data.queue[positionInQueue + 1];\r\n    if (nextSong) {\r\n      dispatch({ type: \"SET_SONG\", payload: { song: nextSong } });\r\n    }\r\n  }\r\n\r\n  function handlePlayPrevSong() {\r\n    const prevSong = data.queue[positionInQueue - 1];\r\n    if (prevSong) {\r\n      dispatch({ type: \"SET_SONG\", payload: { song: prevSong } });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card variant=\"outlined\" className={classes.container}>\r\n        <div className={classes.details}>\r\n          <CardContent className={classes.content}>\r\n            <Typography variant=\"h5\" component=\"h3\">\r\n              {state.song.title}\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\" component=\"p\" color=\"textSecondary\">\r\n              {state.song.artist}\r\n            </Typography>\r\n          </CardContent>\r\n          <div className={classes.controls}>\r\n            <IconButton onClick={handlePlayPrevSong}>\r\n              <SkipPrevious />\r\n            </IconButton>\r\n            <IconButton onClick={handleTogglePlay}>\r\n              {state.isPlaying ? (\r\n                <Pause className={classes.playIcon} />\r\n              ) : (\r\n                <PlayArrow className={classes.playIcon} />\r\n              )}\r\n            </IconButton>\r\n            <IconButton onClick={handlePlayNextSong}>\r\n              <SkipNext />\r\n            </IconButton>\r\n            <Typography variant=\"subtitle1\" component=\"p\" color=\"textSecondary\">\r\n              {formatDuration(playedSeconds)}\r\n            </Typography>\r\n          </div>\r\n          <Slider\r\n            onMouseDown={handleSeekMouseDown}\r\n            onMouseUp={handleSeekMouseUp}\r\n            onChange={handleProgressChange}\r\n            value={played}\r\n            type=\"range\"\r\n            min={0}\r\n            max={1}\r\n            step={0.01}\r\n          />\r\n        </div>\r\n        <ReactPlayer\r\n          ref={reactPlayerRef}\r\n          onProgress={({ played, playedSeconds }) => {\r\n            if (!seeking) {\r\n              setPlayed(played);\r\n              setPlayedSeconds(playedSeconds);\r\n            }\r\n          }}\r\n          url={state.song.url}\r\n          playing={state.isPlaying}\r\n          hidden\r\n        />\r\n        <CardMedia className={classes.thumbnail} image={state.song.thumbnail} />\r\n      </Card>\r\n      <QueuedSongList queue={data.queue} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SongPlayer;\r\n","function songReducer(state, action) {\r\n\tswitch (action.type) {\r\n\t\tcase 'PLAY_SONG': {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisPlaying: true\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase 'PAUSE_SONG': {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisPlaying: false\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase 'SET_SONG': {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tsong: action.payload.song\r\n\t\t\t};\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport default songReducer;\r\n","import React from 'react';\nimport Header from './components/Header';\nimport AddSong from './components/AddSong';\nimport SongList from './components/SongList';\nimport SongPlayer from './components/SongPlayer';\nimport { Grid, useMediaQuery, Hidden } from '@material-ui/core';\nimport songReducer from './reducer';\n\nexport const SongContext = React.createContext({\n\tsong: {\n\t\tid: 'bef8a1ca-6db1-4f44-b47c-8da14c12b508',\n\t\ttitle: 'A Way Home',\n\t\tartist: 'Memorex Memories',\n\t\tthumbnail: 'http://img.youtube.com/vi/KbC46oJmLh4/0.jpg',\n\t\turl: 'https://www.youtube.com/watch?v=KbC46oJmLh4',\n\t\tduration: 239\n\t},\n\tisPlaying: false\n});\n\nfunction App() {\n\tconst initialSongState = React.useContext(SongContext);\n\tconst [ state, dispatch ] = React.useReducer(songReducer, initialSongState);\n\tconst greaterThanSm = useMediaQuery((theme) => theme.breakpoints.up('sm'));\n\tconst greaterThanMd = useMediaQuery((theme) => theme.breakpoints.up('md'));\n\n\treturn (\n\t\t<SongContext.Provider value={{ state, dispatch }}>\n\t\t\t<Hidden only=\"xs\">\n\t\t\t\t<Header />\n\t\t\t</Hidden>\n\t\t\t<Grid container spacing={3}>\n\t\t\t\t<Grid\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tpaddingTop: greaterThanSm ? 80 : 10\n\t\t\t\t\t}}\n\t\t\t\t\titem\n\t\t\t\t\txs={12}\n\t\t\t\t\tmd={7}\n\t\t\t\t>\n\t\t\t\t\t<AddSong />\n\t\t\t\t\t<SongList />\n\t\t\t\t</Grid>\n\t\t\t\t<Grid\n\t\t\t\t\tstyle={\n\t\t\t\t\t\tgreaterThanMd ? (\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tposition: 'fixed',\n\t\t\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\t\t\tright: 0,\n\t\t\t\t\t\t\t\ttop: 70\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tposition: 'fixed',\n\t\t\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\t\t\tbottom: 0\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t\titem\n\t\t\t\t\txs={12}\n\t\t\t\t\tmd={5}\n\t\t\t\t>\n\t\t\t\t\t<SongPlayer />\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</SongContext.Provider>\n\t);\n}\n\nexport default App;\n","import { createMuiTheme } from '@material-ui/core/styles';\r\nimport { teal, purple } from '@material-ui/core/colors';\r\n\r\nconst theme = createMuiTheme({\r\n\tpalette: {\r\n\t\ttype: 'dark',\r\n\t\tprimary: teal,\r\n\t\tsecondary: purple\r\n\t}\r\n});\r\n\r\nexport default theme;\r\n","import ApolloClient from 'apollo-client';\r\nimport { WebSocketLink } from 'apollo-link-ws';\r\nimport { InMemoryCache } from 'apollo-cache-inmemory';\r\nimport { gql } from 'apollo-boost';\r\nimport { GET_QUEUED_SONGS } from './queries';\r\n// import ApolloClient from \"apollo-boost\";\r\n\r\nconst client = new ApolloClient({\r\n\tlink: new WebSocketLink({\r\n\t\t// uri: \"wss://apollo-music-share.herokuapp.com/v1/graphql\",\r\n\t\turi: 'wss://apollo-music-share-hashim-k.herokuapp.com/v1/graphql',\r\n\t\toptions: {\r\n\t\t\treconnect: true\r\n\t\t}\r\n\t}),\r\n\tcache: new InMemoryCache(),\r\n\ttypeDefs: gql`\r\n\t\ttype Song {\r\n\t\t\tid: uuid!\r\n\t\t\ttitle: String!\r\n\t\t\tartist: String!\r\n\t\t\tthumbnail: String!\r\n\t\t\tduration: Float!\r\n\t\t\turl: String!\r\n\t\t}\r\n\r\n\t\tinput SongInput {\r\n\t\t\tid: uuid!\r\n\t\t\ttitle: String!\r\n\t\t\tartist: String!\r\n\t\t\tthumbnail: String!\r\n\t\t\tduration: Float!\r\n\t\t\turl: String!\r\n\t\t}\r\n\r\n\t\ttype Query {\r\n\t\t\tqueue: [Song]!\r\n\t\t}\r\n\r\n\t\ttype Mutation {\r\n\t\t\taddOrRemoveFromQueue(input: SongInput!): [Song]!\r\n\t\t}\r\n\t`,\r\n\tresolvers: {\r\n\t\tMutation: {\r\n\t\t\taddOrRemoveFromQueue: (_, { input }, { cache }) => {\r\n\t\t\t\tconst queryResult = cache.readQuery({\r\n\t\t\t\t\tquery: GET_QUEUED_SONGS\r\n\t\t\t\t});\r\n\t\t\t\tif (queryResult) {\r\n\t\t\t\t\tconst { queue } = queryResult;\r\n\t\t\t\t\tconst isInQueue = queue.some((song) => song.id === input.id);\r\n\t\t\t\t\tconst newQueue = isInQueue ? queue.filter((song) => song.id !== input.id) : [ ...queue, input ];\r\n\t\t\t\t\tcache.writeQuery({\r\n\t\t\t\t\t\tquery: GET_QUEUED_SONGS,\r\n\t\t\t\t\t\tdata: { queue: newQueue }\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn newQueue;\r\n\t\t\t\t}\r\n\t\t\t\treturn [];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n});\r\n\r\nconst hasQueue = Boolean(localStorage.getItem('queue'));\r\n\r\nconst data = {\r\n\tqueue: hasQueue ? JSON.parse(localStorage.getItem('queue')) : []\r\n};\r\n// const client = new ApolloClient({\r\n//   uri: \"https://apollo-music-share.herokuapp.com/v1/graphql\"\r\n// });\r\nclient.writeData({ data });\r\n\r\nexport default client;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { MuiThemeProvider, CssBaseline } from '@material-ui/core';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport theme from './theme';\nimport client from './graphql/client';\n\nReactDOM.render(\n\t<ApolloProvider client={client}>\n\t\t<MuiThemeProvider theme={theme}>\n\t\t\t<CssBaseline />\n\t\t\t<App />\n\t\t</MuiThemeProvider>\n\t</ApolloProvider>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}